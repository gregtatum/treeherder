{"version":3,"sources":["webpack:///./ui/taskcluster-auth-callback/TaskclusterCallback.jsx","webpack:///./ui/taskcluster-auth-callback/index.jsx","webpack:///./node_modules/js-cookie/src/js.cookie.js","webpack:///./ui/helpers/http.js","webpack:///./ui/taskcluster-auth-callback/constants.js","webpack:///./ui/helpers/url.js","webpack:///./ui/helpers/errorMessage.js","webpack:///./ui/shared/CallbackMessage.jsx","webpack:///./ui/shared/ErrorMessages.jsx"],"names":["TaskclusterCallback","React","PureComponent","constructor","props","super","getCredentials","async","rootUrl","localStorage","getItem","this","setState","errorMessage","response","fetchToken","code","failureStatus","fetchCredentials","data","access_token","setItem","JSON","stringify","window","opener","close","location","href","origin","options","method","body","redirectURI","clientId","headers","getData","token","mode","Authorization","state","componentDidMount","parseQueryParams","search","requestState","render","CallbackMessage","text","document","getElementById","factory","module","exports","OldCookies","Cookies","api","noConflict","extend","i","result","arguments","length","attributes","key","decode","s","replace","decodeURIComponent","init","converter","set","value","path","defaults","expires","Date","toUTCString","test","e","write","encodeURIComponent","String","escape","stringifiedAttributes","attributeName","split","cookie","get","json","jar","cookies","parts","slice","join","charAt","name","read","parse","getJSON","remove","withConverter","generateHeaders","Headers","Accept","url","fetch","ok","status","startsWith","processErrorMessage","statusText","create","uri","credentials","update","destroy","processResponse","errorMessages","processErrors","responses","forEach","push","tcAuthCallbackUrl","prodFirefoxRootUrl","checkRootUrl","uiJobsUrlBase","bzBaseUrl","hgBaseUrl","dxrBaseUrl","bugsEndpoint","bugDetailsEndpoint","graphsEndpoint","deployedRevisionUrl","loginCallbackUrl","platformsEndpoint","pushEndpoint","repoEndpoint","getRunnableJobsURL","decisionTask","id","run","tcLibUrls","withRootUrl","getArtifactsUrl","params","taskId","artifactPath","createQueryParams","URLSearchParams","toString","getApiUrl","getBugUrl","bugId","getInspectTaskUrl","timestamp","_rootUrl","ui","getReftestUrl","logUrl","getLogViewerUrl","jobId","repoName","lineNumber","rv","getPerfAnalysisUrl","getJobsUrl","getPushHealthUrl","getCompareChooserUrl","entries","reduce","acc","extractSearchString","createApiUrl","bugzillaBugsApi","query","updateQueryParams","queryParams","history","pathname","formatModelError","message","detail","formatTaskclusterError","err","indexOf","error","Object","keys","className","failureMessage","defaultProps","ErrorMessages","visible","componentDidUpdate","prevProps","messages","map","color","isOpen","toggle"],"mappings":"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","file":"assets/taskcluster-auth.1e60765a.js","sourcesContent":["import React from 'react';\n\nimport { parseQueryParams } from '../helpers/url';\nimport { getData } from '../helpers/http';\nimport CallbackMessage from '../shared/CallbackMessage';\n\nimport { clientId, redirectURI, errorMessage } from './constants';\n\nexport default class TaskclusterCallback extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errorMessage: '',\n    };\n  }\n\n  componentDidMount() {\n    // We're not using react router's location prop because we can't provide\n    // taskcluster with a redirect URI that contains a fragment (hash) per\n    // oath2 protocol (which is used by the hash router for parsing query params)\n    const { code, state } = parseQueryParams(window.location.search);\n    const requestState = localStorage.getItem('requestState');\n\n    if (code && requestState && requestState === state) {\n      this.getCredentials(code);\n    } else {\n      this.setState({\n        errorMessage,\n      });\n    }\n  }\n\n  getCredentials = async (code) => {\n    const rootUrl = localStorage.getItem('tcRootUrl');\n    if (!rootUrl) {\n      this.setState({ errorMessage });\n      return;\n    }\n    let response = await this.fetchToken(code, rootUrl);\n\n    if (response.failureStatus) {\n      this.setState({ errorMessage });\n      return;\n    }\n    response = await this.fetchCredentials(response.data.access_token, rootUrl);\n\n    if (response.failureStatus) {\n      this.setState({ errorMessage });\n      return;\n    }\n    localStorage.setItem(\n      'userCredentials',\n      JSON.stringify({ [rootUrl]: response.data }),\n    );\n    if (window.opener) {\n      window.close();\n    } else {\n      window.location.href = window.origin;\n    }\n  };\n\n  fetchToken = async (code, rootUrl) => {\n    const options = {\n      method: 'POST',\n      body: `grant_type=authorization_code&code=${code}&redirect_uri=${redirectURI}&client_id=${clientId}`,\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    };\n    return getData(`${rootUrl}/login/oauth/token`, options);\n  };\n\n  fetchCredentials = async (token, rootUrl) => {\n    const options = {\n      mode: 'cors',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n    };\n    return getData(`${rootUrl}/login/oauth/credentials`, options);\n  };\n\n  render() {\n    const { errorMessage } = this.state;\n    return (\n      <CallbackMessage\n        errorMessage={errorMessage}\n        text=\"Getting Taskcluster credentials...\"\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport TaskClusterCallback from './TaskclusterCallback';\n\nrender(<TaskClusterCallback />, document.getElementById('root'));\n","/*!\n * JavaScript Cookie v2.2.1\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction decode (s) {\n\t\treturn s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api() {}\n\n\t\tfunction set (key, value, attributes) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattributes = extend({\n\t\t\t\tpath: '/'\n\t\t\t}, api.defaults, attributes);\n\n\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\tattributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);\n\t\t\t}\n\n\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\ttry {\n\t\t\t\tvar result = JSON.stringify(value);\n\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\tvalue = result;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\n\t\t\tvalue = converter.write ?\n\t\t\t\tconverter.write(value, key) :\n\t\t\t\tencodeURIComponent(String(value))\n\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\n\t\t\tkey = encodeURIComponent(String(key))\n\t\t\t\t.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)\n\t\t\t\t.replace(/[\\(\\)]/g, escape);\n\n\t\t\tvar stringifiedAttributes = '';\n\t\t\tfor (var attributeName in attributes) {\n\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Considers RFC 6265 section 5.2:\n\t\t\t\t// ...\n\t\t\t\t// 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n\t\t\t\t//     character:\n\t\t\t\t// Consume the characters of the unparsed-attributes up to,\n\t\t\t\t// not including, the first %x3B (\";\") character.\n\t\t\t\t// ...\n\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n\t\t\t}\n\n\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t}\n\n\t\tfunction get (key, json) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar jar = {};\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all.\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = decode(parts[0]);\n\t\t\t\t\tcookie = (converter.read || converter)(cookie, name) ||\n\t\t\t\t\t\tdecode(cookie);\n\n\t\t\t\t\tif (json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tjar[name] = cookie;\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn key ? jar[key] : jar;\n\t\t}\n\n\t\tapi.set = set;\n\t\tapi.get = function (key) {\n\t\t\treturn get(key, false /* read as raw */);\n\t\t};\n\t\tapi.getJSON = function (key) {\n\t\t\treturn get(key, true /* read as json */);\n\t\t};\n\t\tapi.remove = function (key, attributes) {\n\t\t\tset(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.defaults = {};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n","import Cookies from 'js-cookie';\n\nimport { processErrorMessage } from './errorMessage';\n\nconst generateHeaders = function generateHeaders() {\n  return new Headers({\n    'X-CSRFToken': Cookies.get('csrftoken'),\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  });\n};\n\nexport const getData = async function getData(url, options = {}) {\n  let failureStatus = null;\n  const response = await fetch(url, options);\n\n  if (!response.ok) {\n    failureStatus = response.status;\n  }\n\n  const contentType = response.headers\n    .get('content-type')\n    .startsWith('text/html');\n\n  if (contentType && failureStatus) {\n    const errorMessage = processErrorMessage(\n      `${failureStatus}: ${response.statusText}`,\n      failureStatus,\n    );\n    return { data: errorMessage, failureStatus };\n  }\n\n  let data = await response.json();\n\n  if (failureStatus) {\n    data = processErrorMessage(data, failureStatus);\n  }\n  return { data, failureStatus };\n};\n\n// TODO: The credentials param can be removed in July once Firefox 62 ships and it is the default.\nexport const create = function postJson(uri, data) {\n  return getData(uri, {\n    method: 'POST',\n    headers: generateHeaders(),\n    body: JSON.stringify(data),\n    credentials: 'same-origin',\n  });\n};\n\nexport const update = function putJson(uri, data) {\n  return getData(uri, {\n    method: 'PUT',\n    headers: generateHeaders(),\n    body: JSON.stringify(data),\n    credentials: 'same-origin',\n  });\n};\n\nexport const destroy = function deleteRecord(uri) {\n  return fetch(uri, {\n    method: 'DELETE',\n    headers: generateHeaders(),\n    credentials: 'same-origin',\n  });\n};\n\nexport const processResponse = (response, state, errorMessages) => {\n  const { data, failureStatus } = response;\n  if (failureStatus) {\n    return { errorMessages: [...errorMessages, ...[data]] };\n  }\n  return { [state]: data };\n};\n\nexport const processErrors = (responses) => {\n  const errorMessages = [];\n  responses.forEach((response) => {\n    if (response.failureStatus) {\n      errorMessages.push(response.data);\n    }\n  });\n  return errorMessages;\n};\n","import { tcAuthCallbackUrl } from '../helpers/url';\n\nexport const tcClientIdMap = {\n  'https://treeherder.mozilla.org': 'production',\n  'https://treeherder.allizom.org': 'stage',\n  'https://treeherder-prototype.herokuapp.com': 'dev',\n  'http://localhost:5000': 'localhost',\n  'https://treeherder-taskcluster-staging.herokuapp.com': 'taskcluster-staging',\n  'https://treeherder-prototype2.herokuapp.com': 'dev2',\n};\n\nexport const clientId = `treeherder-${tcClientIdMap[window.location.origin]}`;\n\nexport const redirectURI = `${window.location.origin}${tcAuthCallbackUrl}`;\n\nexport const errorMessage = `There was a problem verifying your Taskcluster credentials. Please try again later.`;\n\nexport const prodFirefoxRootUrl = 'https://firefox-ci-tc.services.mozilla.com';\n\nexport const stagingFirefoxRootUrl =\n  'https://stage.taskcluster.nonprod.cloudops.mozgcp.net';\n\nexport const checkRootUrl = (rootUrl) => {\n  // we need this workaround for the treeherder-taskcluster-staging deployment since all repository fixtures\n  // and the default login rootUrls are for https://firefox-ci-tc.services.mozilla.com\n  if (\n    rootUrl === prodFirefoxRootUrl &&\n    clientId === 'treeherder-taskcluster-staging'\n  ) {\n    return stagingFirefoxRootUrl;\n  }\n  return rootUrl;\n};\n","// NB: Treeherder sets a Content-Security-Policy header in production, so when\n// adding new domains *for use by fetch()*, update the `connect-src` directive:\n// https://github.com/mozilla/treeherder/blob/master/treeherder/middleware.py\nimport tcLibUrls from 'taskcluster-lib-urls';\n\nexport const uiJobsUrlBase = '/#/jobs';\n\nexport const uiPushHealthBase = '/pushhealth.html';\n\nexport const bzBaseUrl = 'https://bugzilla.mozilla.org/';\n\nexport const hgBaseUrl = 'https://hg.mozilla.org/';\n\nexport const dxrBaseUrl = 'https://dxr.mozilla.org/';\n\nexport const bugsEndpoint = '/failures/';\n\nexport const bugDetailsEndpoint = '/failuresbybug/';\n\nexport const graphsEndpoint = '/failurecount/';\n\nexport const deployedRevisionUrl = '/revision.txt';\n\nexport const loginCallbackUrl = '/login.html';\n\nexport const platformsEndpoint = '/machineplatforms/';\n\nexport const pushEndpoint = '/push/';\n\nexport const repoEndpoint = '/repository/';\n\nexport const tcAuthCallbackUrl = '/taskcluster-auth.html';\n\nexport const getRunnableJobsURL = function getRunnableJobsURL(\n  decisionTask,\n  rootUrl,\n) {\n  const { id, run } = decisionTask;\n  const tcUrl = tcLibUrls.withRootUrl(rootUrl);\n\n  const url = tcUrl.api(\n    'queue',\n    'v1',\n    `/task/${id}/runs/${run}/artifacts/public/runnable-jobs.json`,\n  );\n  return url;\n};\n\nexport const getArtifactsUrl = (params) => {\n  const { taskId, run, rootUrl, artifactPath } = params;\n\n  const tcUrl = tcLibUrls.withRootUrl(rootUrl);\n  let url = tcUrl.api('queue', 'v1', `/task/${taskId}/runs/${run}/artifacts`);\n\n  if (artifactPath) {\n    url += `/${artifactPath}`;\n  }\n  return url;\n};\n\nexport const createQueryParams = function createQueryParams(params) {\n  const query =\n    params instanceof URLSearchParams ? params : new URLSearchParams(params);\n  return `?${query.toString()}`;\n};\n\n// Leaving this here since even though SERVICE_DOMAIN no longer exists (proxying\n// is used instead), it provides a single place to modify if needed in the future.\nexport const getServiceUrl = function getServiceUrl(uri) {\n  return uri;\n};\n\nexport const getApiUrl = function getApiUrl(uri) {\n  return getServiceUrl(`/api${uri}`);\n};\n\nexport const getBugUrl = function getBugUrl(bugId) {\n  return `${bzBaseUrl}show_bug.cgi?id=${bugId}`;\n};\n\nexport const getInspectTaskUrl = function getInspectTaskUrl(\n  taskId,\n  rootUrl,\n  timestamp,\n) {\n  // 1573257600 is the timestamp for the 2019-11-09 taskcluster migration date\n  const _rootUrl = timestamp < 1573257600 ? 'https://taskcluster.net' : rootUrl;\n  return tcLibUrls.ui(_rootUrl, `tasks/${taskId}`);\n};\n\nexport const getReftestUrl = function getReftestUrl(logUrl) {\n  return `https://hg.mozilla.org/mozilla-central/raw-file/tip/layout/tools/reftest/reftest-analyzer.xhtml#logurl=${logUrl}&only_show_unexpected=1`;\n};\n\n// repoName here is necessary because this data comes from the /jobs endpoint\n// which is a \"project\" endpoint that requires the project name.  We shouldn't\n// need that since the ids are unique across projects.\n// Bug 1441938 - The project_bound_router is not needed and cumbersome in some cases\nexport const getLogViewerUrl = function getLogViewerUrl(\n  jobId,\n  repoName,\n  lineNumber,\n) {\n  const rv = `logviewer.html#?job_id=${jobId}&repo=${repoName}`;\n  return lineNumber ? `${rv}&lineNumber=${lineNumber}` : rv;\n};\n\nexport const getPerfAnalysisUrl = function getPerfAnalysisUrl(url) {\n  return `https://profiler.firefox.com/from-url/${encodeURIComponent(url)}`;\n};\n\n// This takes a plain object, rather than a URLSearchParams object.\nexport const getJobsUrl = function getJobsUrl(params) {\n  return `${uiJobsUrlBase}${createQueryParams(params)}`;\n};\n\n// This takes a plain object, rather than a URLSearchParams object.\nexport const getPushHealthUrl = function getJobsUrl(params) {\n  return `${uiPushHealthBase}${createQueryParams(params)}`;\n};\n\nexport const getCompareChooserUrl = function getCompareChooserUrl(params) {\n  return `perf.html#/comparechooser${createQueryParams(params)}`;\n};\n\nexport const parseQueryParams = function parseQueryParams(search) {\n  const params = new URLSearchParams(search);\n\n  return [...params.entries()].reduce(\n    (acc, [key, value]) => ({ ...acc, [key]: value }),\n    {},\n  );\n};\n\nexport const extractSearchString = function getQueryString(url) {\n  const parts = url.split('?');\n\n  return parts[parts.length - 1];\n};\n\n// `api` requires a preceding forward slash\nexport const createApiUrl = function createApiUrl(api, params) {\n  const apiUrl = getApiUrl(api);\n  const query = createQueryParams(params);\n  return `${apiUrl}${query}`;\n};\n\n// bugs can be one bug or a comma separated (no spaces) string of bugs\nexport const bugzillaBugsApi = function bugzillaBugsApi(api, params) {\n  const query = createQueryParams(params);\n  return `${bzBaseUrl}rest/${api}${query}`;\n};\n\nexport const getRevisionUrl = (revision, projectName) =>\n  revision ? getJobsUrl({ repo: projectName, revision }) : '';\n\nexport const updateQueryParams = function updateHistoryWithQueryParams(\n  queryParams,\n  history,\n  location,\n) {\n  history.replace({ pathname: location.pathname, search: queryParams });\n  // we do this so the api's won't be called twice (location/history updates will trigger a lifecycle hook)\n  location.search = queryParams;\n};\n","/**\nThis object contains a few constants and helper functions related to error\nmessage handling.\n*/\n\n/**\nHelper method for constructing an error message from the server side.\n\n@param {Error} e error object from the server http response.\n@param {String} default error message to use by default one cannot be\n                        found in the error object.\n*/\nexport const formatModelError = function formatModelError(e, message) {\n  // Generic error message when we encounter 401 status codes from the\n  // server.\n  const AUTH_ERROR_MSG = 'Please login to Treeherder to complete this action';\n\n  // If we failed to authenticate for some reason return a nicer error message.\n  if (e.status === 401 || e.status === 403) {\n    return AUTH_ERROR_MSG;\n  }\n\n  // If there is nothing in the server message use the HTTP response status.\n  const errorMessage = `${(e.data && e.data.detail) || e.status} ${\n    e.statusText\n  }`;\n  return `${message}: ${errorMessage}`;\n};\n\n/**\nHelper method for constructing an error message from Taskcluster.\n\n@param {Error} e error object from taskcluster client.\n*/\nexport const formatTaskclusterError = function formatTaskclusterError(e) {\n  const TC_ERROR_PREFIX = 'Taskcluster: ';\n  const err = e.body || e;\n  const errorMessage = err.message || err.toString();\n\n  if (errorMessage.indexOf('----') !== -1) {\n    return `${TC_ERROR_PREFIX}${errorMessage.split('----')[0]}`;\n  }\n\n  return `${TC_ERROR_PREFIX}${errorMessage}`;\n};\n\nexport const processErrorMessage = function processErrorMessage(error, status) {\n  if (status >= 500) {\n    return 'There was a problem retrieving the data. Please try again in a minute.';\n  }\n\n  if (error instanceof Object) {\n    const key = Object.keys(error);\n\n    return `${key}: ${error[key]}`;\n  }\n  return error;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row } from 'reactstrap';\n\nimport ErrorMessages from './ErrorMessages';\n\nconst CallbackMessage = ({ errorMessage, text }) => (\n  <div className=\"pt-5\">\n    {errorMessage ? (\n      <ErrorMessages failureMessage={errorMessage} />\n    ) : (\n      <Row className=\"justify-content-center\">\n        <p className=\"lead text-center\">{text}</p>\n      </Row>\n    )}\n  </div>\n);\n\nCallbackMessage.propTypes = {\n  errorMessage: PropTypes.string,\n  text: PropTypes.string.isRequired,\n};\n\nCallbackMessage.defaultProps = {\n  errorMessage: '',\n};\n\nexport default CallbackMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert } from 'reactstrap';\n\nclass ErrorMessages extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { errorMessages, failureMessage } = this.props;\n    if (\n      (prevProps.errorMessages !== errorMessages ||\n        prevProps.failureMessage !== failureMessage) &&\n      !this.state.visible\n    ) {\n      // reset Alert if previouly dismissed\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ visible: true });\n    }\n  }\n\n  render() {\n    const { errorMessages, failureMessage } = this.props;\n    const { visible } = this.state;\n\n    const messages = errorMessages.length ? errorMessages : [failureMessage];\n    return (\n      <div>\n        {messages.map((message) => (\n          <Alert\n            color=\"danger\"\n            isOpen={visible}\n            toggle={() => this.setState({ visible: !visible })}\n            key={message}\n            className=\"text-center\"\n          >\n            {message}\n          </Alert>\n        ))}\n      </div>\n    );\n  }\n}\n\nErrorMessages.propTypes = {\n  failureMessage: PropTypes.string,\n  errorMessages: PropTypes.arrayOf(PropTypes.string),\n};\n\nErrorMessages.defaultProps = {\n  failureMessage: null,\n  errorMessages: [],\n};\n\nexport default ErrorMessages;\n"],"sourceRoot":""}